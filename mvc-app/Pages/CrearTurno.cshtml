@page
@model CrearTurnoModel
@using Microsoft.AspNetCore.Identity
@{
    ViewData["Title"] = "Crear Turno";
    var minDate = DateTime.Now.AddHours(24).ToString("yyyy-MM-ddTHH:mm");
}

<style>
    #tarjetaSection {
        height: 0;
        overflow: hidden;
        opacity: 0;
        transition: height 0.4s ease, opacity 0.4s ease;
        pointer-events: none;
    }

        #tarjetaSection.show {
            height: auto;
            opacity: 1;
            pointer-events: auto;
        }
</style>

<div class="d-flex justify-content-center py-5">
    <div class="card shadow p-4" style="background-color: #1f1f1f; color: #fff; width: 100%; max-width: 600px;">
        <h2 class="text-center mb-4">Crear Turno</h2>

        <form method="post" id="turnoForm">
            <div class="mb-3">
                <h5>Servicios seleccionados:</h5>
                <ul class="list-group list-group-flush">
                    @foreach (var servicio in Model.Servicios)
                    {
                    <li class="list-group-item bg-transparent text-white border-0 px-0">
                        <strong>@servicio.Nombre</strong> - $@servicio.Precio - @servicio.Duracion.TotalMinutes min
                    </li>
                    }
                </ul>
            </div>

            <div class="form-floating mb-3">
                <input type="datetime-local"
                       asp-for="FechaHora"
                       class="form-control bg-dark text-white border-secondary"
                       min="@minDate"
                       value="@Model.FechaHora.ToString("yyyy-MM-ddTHH:mm")"
                       required />
                <label>Fecha y hora del turno</label>
            </div>

            <div class="mb-3">
                <label class="form-label">Método de pago:</label><br />
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="efectivo" name="MetodoPago" value="Efectivo" checked />
                    <label class="form-check-label" for="efectivo">Efectivo</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="radio" id="tarjeta" name="MetodoPago" value="Tarjeta" />
                    <label class="form-check-label" for="tarjeta">Tarjeta</label>
                </div>
            </div>

            <div id="tarjetaSection" class="p-3 rounded border border-secondary mb-3 bg-dark">
                <div class="mb-3">
                    <label for="TarjetaId" class="form-label">Seleccionar tarjeta guardada:</label>
                    <select asp-for="TarjetaId" class="form-select bg-dark text-white border-secondary" id="TarjetaId">
                        <option value="">-- Ingresar nueva tarjeta --</option>
                        @foreach (var t in Model.TarjetasGuardadas)
                        {
                        <option value="@t.Id">**** **** **** @t.Ultimos4Digitos - @t.NombreTitular</option>
                        }
                    </select>
                </div>

                <h5 class="mt-3">O ingresar nueva tarjeta:</h5>
                <div class="form-floating mb-3">
                    <input type="text" name="NuevaTarjetaNumero" id="NuevaTarjetaNumero" class="form-control bg-dark text-white border-secondary" maxlength="16" pattern="\d{16}" />
                    <label for="NuevaTarjetaNumero">Número</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="text" name="NuevaTarjetaNombre" id="NuevaTarjetaNombre" class="form-control bg-dark text-white border-secondary" />
                    <label for="NuevaTarjetaNombre">Nombre del titular</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="month" name="NuevaTarjetaVencimiento" id="NuevaTarjetaVencimiento" class="form-control bg-dark text-white border-secondary" />
                    <label for="NuevaTarjetaVencimiento">Vencimiento</label>
                </div>
                <div class="form-check">
                    <input type="checkbox" name="GuardarTarjeta" id="GuardarTarjeta" class="form-check-input" />
                    <label for="GuardarTarjeta" class="form-check-label">Guardar esta tarjeta</label>
                </div>
            </div>

            <input type="hidden" name="IdsServicios" value="@Model.IdsServicios" />
            <div class="d-grid mt-4">
                <button type="submit" class="btn" style="background-color: #0dcaf0; color: black;">Confirmar Turno</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const efectivo = document.getElementById("efectivo");
        const tarjeta = document.getElementById("tarjeta");
        const tarjetaSection = document.getElementById("tarjetaSection");

        function toggleTarjeta() {
            tarjetaSection.classList.toggle("show", tarjeta.checked);
        }

        efectivo.addEventListener("change", toggleTarjeta);
        tarjeta.addEventListener("change", toggleTarjeta);
        toggleTarjeta();

        document.getElementById("turnoForm").addEventListener("submit", function (e) {
            if (tarjeta.checked) {
                const tarjetaSeleccionada = document.getElementById("TarjetaId").value.trim();
                const numero = document.getElementById("NuevaTarjetaNumero").value.trim();
                const nombre = document.getElementById("NuevaTarjetaNombre").value.trim();
                const vencimiento = document.getElementById("NuevaTarjetaVencimiento").value;

                const seSeleccionoGuardada = tarjetaSeleccionada !== "";
                const seIngresoNueva = numero !== "" || nombre !== "" || vencimiento !== "";

                if (!seSeleccionoGuardada && !seIngresoNueva) {
                    alert("Debe seleccionar una tarjeta guardada o ingresar una nueva.");
                    e.preventDefault();
                    return;
                }

                if (!seSeleccionoGuardada && seIngresoNueva) {
                    if (!/^\d{16}$/.test(numero)) {
                        alert("Número de tarjeta inválido. Debe tener 16 dígitos.");
                        e.preventDefault();
                        return;
                    }

                    if (nombre === "") {
                        alert("Debe ingresar el nombre del titular.");
                        e.preventDefault();
                        return;
                    }

                    if (!vencimiento) {
                        alert("Debe ingresar una fecha de vencimiento.");
                        e.preventDefault();
                        return;
                    }

                    const hoy = new Date();
                    const venc = new Date(vencimiento + "-01");
                    venc.setMonth(venc.getMonth() + 1); // Fin del mes
                    if (venc < hoy) {
                        alert("La tarjeta ingresada está vencida.");
                        e.preventDefault();
                        return;
                    }
                }
            }
        });
    </script>
}